For version 0.8.4:

	* Include DCC fixes
	
	* Modes to automatically set when we connect to the server (whether
	  the client gives them to us or not)

	    initial_modes "i"

	* Fixed 'from' that can accept hostnames -or- IP addresses.

	* Better warnings from the config file if its still considered
	  valid.

	* /DIRCPROXY JUMP
	  without specifying a num will just jump to the next server in
	  the list.


For version 0.8.5:

        * /DIRCPROXY STATUS (see who's online etc),
	  /DIRCPROXY DISCONNECT (disconnect someone) and
	  /DIRCPROXY KILL (politely ask someone to leave :) for admins.

	* dircproxy to send a number of ctcp's to the client on first
	  connection, then use those as replies when the client is detached.

	* Change the away message every hour to indicate how long they've
	  been away

	* Ping the client every now and then in case the server doesn't.  To
	  make sure the line hasn't dropped between the tw.


For version 0.9.0:

	* Miniature ident daemon that give fake replies to dircproxy
	  controlled ports, and otherwise spawns the inbuilt identd to handle
	  the request.  It should listen for new things to fake on a pipe.

	* Anyone want to write that fake ident daemon? :o)

	* Have a single config option to change username's

	    local_username "scott"

	  Which can be changed with
	  
	    /DIRCPROXY USER username

	  depending on how this is set

	    allow_user YES/no

	  Again, will result in reconnection to server if changed

	* If there's a fake ident daemon listening on the right socket, it
	  will always use that.  Otherwise if its running as root it'll use
	  seteuid().  Otherwise it'll issue a warning saying it couldn't
	  fix the username.

	* A very simple method of automatically opping people and voicing
	  people on channels you are on.

	    auto_op "#lush,#gayteensex T-Shirt*!*scott@project.linux.com"
	    auto_op "*!aaron@*.ntl.com"

	    # first matching voice/op takes priority
	    auto_voice "#demon pbook!*"
	    auto_op "#demon *"


To be written into 1.1.x for 1.2.0:

	* mIRC DCC RESUME support.  This will probably happen once I'm sure
	  dircproxy supports the major UNIX IRC client DCC weirdisms.  Then
	  I'll move on to checking any mIRC DCC weirdisms like RESUME (unless
	  its already in another client I have the source for :)

	* XDCC proxy support, once I learn how it works (see above).

	* mIRC like File server.  This could tie in with XDCC support to
	  provide a dircproxy fserver/xdcc server.

	* dircproxy party line(s), to talk to whoever is online at the
	  time.

