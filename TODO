Possible Future development:

	* Miniature ident daemon that give fake replies to dircproxy
	  controlled ports, and otherwise spawns the inbuilt identd to handle
	  the request.  It should listen for new things to fake on a pipe.

	* Have a single config option to change username's

	    local_username "scott"

	  Which can be changed with
	  
	    /DIRCPROXY USER username

	  depending on how this is set

	    allow_user YES/no

	  Again, will result in reconnection to server if changed

	* Would then need a way of choosing whether to use the fake identd
	  stuff or the seteuid() stuff to change the username.

	* Anyone want to write that fake ident daemon? :o)

	* Let more than one IRC client connect to dircproxy at a time.
	  I kinda think this would be cool, just for the sheer amusement
	  factor of it.  p->client_status would reflect the combined status
	  of all the connected clients.  Would need an extra p->client_count
	  or something

	* mIRC DCC RESUME support.  This will probably happen once I'm sure
	  dircproxy supports the major UNIX IRC client DCC weirdisms.  Then
	  I'll move on to checking any mIRC DCC weirdisms like RESUME (unless
	  its already in another client I have the source for :)

	* XDCC proxy support, once I learn how it works (see above).

	* dircproxy to send a number of ctcp's to the client on first
	  connection, then use those as replies when the client is detached.

	* Multiple listen ports if I can think of a good reason to
	  have them.

	* Transparent proxying using ipchains/ipfwadm or whatever the
	  kernel uses this week.  Figure out how its done and see if its
	  feasible.

        * /DIRCPROXY STATUS (see who's online etc) and
	  /DIRCPROXY KILL (politely ask someone to leave :) for admins.

	* dircproxy party line(s), to talk to whoever is online at the
	  time.

	* "User lists" - hostmask based enabling banning/ignoring/auto-op
	  etc etc.  This will probably happen around version 1.2 of dircproxy
	  as I don't think its really needed for 1.0.

	* mIRC like File server.  Probably version 1.2 or even later if I
	  decide to do it at all.  This could then tie in with XDCC support
	  to provide a dircproxy fserver/xdcc server.

