For the next release (0.7.0)

	* Write log recall output code

	* the /DIRCPROXY command.
	  HELP
	  RECALL [ nickname | [#chan] [from] ] < nlines | all >
	  LOGSIZE [ nickname | #chan ]
	  DETACH [ away-msg ]
          PERSIST
	  QUIT [ msg ]		(change /DQUIT to this)

	* If dedicated_proxy = 1 then announce port on DETACH
	  and if p->die_on_close = 1 then announce too

	* PERSIST is available if die_on_close is 1, runs above function
	  and sets die_on_close to 0


Whenever time permits:

	* DCC proxying/rewriting.  Not entirely sure what this involves,
	  probably having listening sockets, rewriting addresses and all
	  sorts of things like that.  Ick.

	* DCC-via-ssh.  This is quite nice, when we get a dcc request,
	  we somehow run an ssh tunnel and forward the necessary ports
	  via ssh.  Would involve killing the process when the proxy
	  has died.  A nice feature to have if possible.

	* Possible "user" directive if dircproxy is running as root, which
	  apon authentication would fork(), setuid() then dedicate the proxy
	  to that user.  This would get around some of the ident issues...


Would be nice:

	* How can we change the username being presented?  Team up with an
	  identd perhaps, or we could fork(), setuid() and then run the
	  function to make new listening socket.


Odd Behaviour that might need sorting:

	* If you connect to a server that's down, then disconnect, and try
	  to reconnect, you won't be allowed to.  This is because your
	  connection class is tied up reconnecting to the server.  The
	  way around this is to set server_maxinitattempts to 0 of course.

