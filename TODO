For the next release (0.7.0)

	* the /DIRCPROXY command.
	  RECALL <chan/msg> [from] nlines
	  DETACH <away-msg>
          PERSIST
	  QUIT <msg>		(change /DQUIT to this)

	* If dedicated_proxy = 1 then announce port on DETACH
	  and if p->die_on_close = 1 then announce too

	* PERSIST is available if die_on_close is 1, runs above function
	  and sets die_on_close to 0

	* using above, a debug() function to replace all the others lying
	  around.  Outputs to stderr if debug mode.

	  debug(level, msg, ...)

	* new syscall_fail() function, outputs to stderr if not in background
	  or in debug

	* Reload configuration file on a HUP

	* Rewrite irc_log.c to make it a little less primitive.

	  irclog_channel_msg(p, chan, from, msg, ...)
	  irclog_channel_notice(p, chan, msg, ...)
	  irclog_channel_info(p, chan, msg, ...)
	  irclog_private_msg(p, from, msg, ...)
	  irclog_notice(p, msg, ...)
	  irclog_notice_all(p, msg, ...)

	* Log configuration options to make it very cool

	  log_chan_while_online		1/0
	  keep_chan_logs		1/0
	  timestamp_chan_logs		1/0

	  log_other_while_online	1/0
	  keep_other_logs		1/0
	  timestamp_other_logs		1/0
	  
	  chan_log_max_size		lines
	  chan_log_default_recall	lines
	  other_log_max_size		lines
	  other_log_default_recall	lines

	* When a user comes in and is already connected, disconnect the
	  existing user?

	  disconnect_existing_user	1/0

	* Drop modes when detached

	  drop_modes			"+o"

	* Locate mysterious "+iw" channel bug.

	* Server passwords, so we can connect to an IRC server that
	  needs a password

	* New log file format:

	  <Keybuk> [12:47] xx yy zz             (msg)
	  -Keybuk- [12:48] edfklj dgdg          (notice)
	  -ircnet.demon.co.uk- [13:00] x quit   (server)
	  -dircproxy- [13:05] bar               (dircproxy)


Whenever time permits:

	* DCC proxying/rewriting.  Not entirely sure what this involves,
	  probably having listening sockets, rewriting addresses and all
	  sorts of things like that.  Ick.

	* DCC-via-ssh.  This is quite nice, when we get a dcc request,
	  we somehow run an ssh tunnel and forward the necessary ports
	  via ssh.  Would involve killing the process when the proxy
	  has died.  A nice feature to have if possible.

	* Possible "user" directive if dircproxy is running as root, which
	  apon authentication would fork(), setuid() then dedicate the proxy
	  to that user.  This would get around some of the ident issues...


Would be nice:

	* How can we change the username being presented?  Team up with an
	  identd perhaps, or we could fork(), setuid() and then run the
	  function to make new listening socket.

